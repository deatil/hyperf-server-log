version: "3.7"
services:
    mysql:
        container_name: mysql
        image: mariadb:latest
        ports:
            - "3306:3306"
        volumes:
            - ./data/mysql:/var/lib/mysql:rw
            - ./logs/mysql:/var/log/mariadb:rw
            - /mnt/conf/mysql:/etc/mysql/conf.d:ro
        environment:
            # - MYSQL_ROOT_USER='admin'
            MYSQL_ROOT_PASSWORD: 123456
        deploy:
            resources:
                limits:
                    cpus: '1.00'
                    memory: 500M
        networks:
            - network
        restart: always

    redis:
        container_name: redis
        hostname: redis
        image: redis:alpine3.13
        ports:
            - "6379:6379"
        volumes:
            - ./server/redis/redis.conf:/usr/local/etc/redis/redis.conf
            - ./server/redis/sysctl.d/:/etc/sysctl.d/:ro
            - ./data/redis:/data
            - ./logs/redis:/log
        command: redis-server /usr/local/etc/redis/redis.conf
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
        networks:
            - network
        restart: always

    zookeeper:
        container_name: zookeeper
        image: 'bitnami/zookeeper:latest'
        ports:
            - '2181:2181'
        expose:
            - "2181"
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
            # - ZOO_ENABLE_AUTH=yes
            # - ZOO_SERVER_USERS=user1,user2
            # - ZOO_SERVER_PASSWORDS=pass4user1,pass4user2
            # - ZOO_CLIENT_USER=user1
            # - ZOO_CLIENT_PASSWORD=pass4user1
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
        networks:
            - network
        restart: always

    kafka:
        container_name: kafka
        hostname: kafka
        image: "wurstmeister/kafka:2.13-2.7.0"
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            # 非必须，设置对内存
            KAFKA_HEAP_OPTS: -Xmx1G -Xms1G
            # 非必须，设置保存7天数据，为默认值
            KAFKA_LOG_RETENTION_HOURS: 168
            KAFKA_MESSAGE_MAX_BYTES: 2000000
            KAFKA_BROKER_ID: 1
            KAFKA_ADVERTISED_HOST_NAME: 192.168.56.105
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_ADVERTISED_PORT: 9092
            KAFKA_LISTENERS: PLAINTEXT://kafka:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LOG_DIRS: "/home/kafka/log"
            KAFKA_CREATE_TOPICS: "serverlog:1:1"
        volumes:
            - ./data/kafka:/kafka
            - ./logs/kafka:/home/kafka/log
            - /var/run/docker.sock:/var/run/docker.sock
            - /etc/localtime:/etc/localtime
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M
        links:
            - "zookeeper"
        networks:
            - network
        restart: always

    swoole:
        container_name: swoole
        image: swoole:v1.0.1
        volumes:
            - ./server/swoole/conf.d/:/usr/local/etc/php/conf.d/:ro
            - ./www:/var/www
            - ./logs/php:/var/log
        working_dir: /var/www
        # build: ./swoole
        command: 
            # - php server.php
            # - php server-log/bin/hyperf.php start  
            - php server-log/bin/hyperf.php server:watch
        ports:
            - "9501:9501"
        environment:
            AUTORELOAD_PROGRAMS: "swoole"
            AUTORELOAD_ANY_FILES: 0
        depends_on:
            - mysql
            - redis
            - kafka
        links:
            - "mysql"
            - "redis"
            - "kafka"
        networks:
            - network
        restart: always
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 300M

    nginx:
        container_name: nginx
        image: nginx:latest
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./server/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
            - ./logs/nginx:/etc/nginx/logs
            - ./www:/etc/nginx/html
        depends_on:
            - swoole
        links:
            - "swoole"
        networks:
            - network            
        restart: always
        deploy:
            resources:
                limits:
                    cpus: '0.50'
                    memory: 100M

volumes:
    phpsocket:
networks: 
    network: